services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: orders_api
    environment:
      DB_DRIVER: ${DB_DRIVER}
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_MAX_OPEN_CONNS: ${DB_MAX_OPEN_CONNS}
      DB_MAX_IDLE_CONNS: ${DB_MAX_IDLE_CONNS}
      WEB_SERVER_PORT: ${WEB_SERVER_PORT}
      GRPC_SERVER_PORT: ${GRPC_SERVER_PORT}
      GRAPHQL_SERVER_PORT: ${GRAPHQL_SERVER_PORT}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "8000:8000"
      - "50051:50051"
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - ./.env

  mysql:
    image: mysql:8.2.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - ./.env

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - ./.env

volumes:
  mysql_data: